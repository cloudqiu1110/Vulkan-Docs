// Copyright (c) 2014-2017 The Khronos Group Inc.
// Copyright notice at https://www.khronos.org/registry/speccopyright.html

[[platformCreateSurface_xlib,platformCreateSurface_xlib]]

=== Xlib Platform

// refBegin vkCreateXlibSurfaceKHR - Create a slink:VkSurfaceKHR object for an X11 window, using the Xlib client-side library

To create a sname:VkSurfaceKHR object for an X11 window, using the Xlib
client-side library, call:

include::../../api/protos/vkCreateXlibSurfaceKHR.txt[]

  * pname:instance is the instance to associate the surface with.
  * pname:pCreateInfo is a pointer to an instance of the
    sname:VkXlibSurfaceCreateInfoKHR structure containing the parameters
    affecting the creation of the surface object.
  * pname:pAllocator is the allocator used for host memory allocated for the
    surface object when there is no more specific allocator available (see
    <<memory-allocation,Memory Allocation>>).
  * pname:pSurface points to a sname:VkSurfaceKHR handle in which the
    created surface object is returned.

include::../../validity/protos/vkCreateXlibSurfaceKHR.txt[]

// refBegin VkXlibSurfaceCreateInfoKHR - Structure specifying parameters of a newly created Xlib surface object

The sname:VkXlibSurfaceCreateInfoKHR structure is defined as:

include::../../api/structs/VkXlibSurfaceCreateInfoKHR.txt[]

  * pname:sType 是数据结构的类型。
  * pname:pNext 是 `NULL` 或者一个指向拓展特定的数据结构的指针。
  * pname:flags is reserved for future use.
  * pname:dpy is a pointer to an Xlib code:Display connection to the X
    server.
  * pname:window is an Xlib code:Window to associate the surface with.

.正确使用
****
  * pname:dpy must: point to a valid Xlib code:Display.
  * pname:window must: be a valid Xlib code:Window.
****

include::../../validity/structs/VkXlibSurfaceCreateInfoKHR.txt[]

With Xlib, pname:minImageExtent, pname:maxImageExtent, and
pname:currentExtent are the window size.
Therefore, a swapchain's pname:imageExtent must: match the window's size.

Some Vulkan functions may: send protocol over the specified Xlib
code:Display connection when using a swapchain or presentable images created
from a VkSurface referring to an Xlib window.
Applications must: therefore ensure the display connection is available to
Vulkan for the duration of any functions that manipulate such swapchains or
their presentable images, and any functions that build or queue command
buffers that operate on such presentable images.
Specifically, applications using Vulkan with Xlib-based swapchains must:

  * Avoid holding a server grab on a display connection while waiting for
    Vulkan operations to complete using a swapchain derived from a different
    display connection referring to the same X server instance.
    Failing to do so may: result in deadlock.

Some implementations may require threads to implement some presentation
modes so applications must: call code:XInitThreads() before calling any
other Xlib functions.
