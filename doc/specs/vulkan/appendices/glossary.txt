// Copyright (c) 2015-2017 The Khronos Group Inc.
// Copyright notice at https://www.khronos.org/registry/speccopyright.html

// The asciidoc [glossary] template cannot contain subsections.
// The abbreviations and prefixes probably belong in the upcoming
// API/extension-writing-guidelines appendix, anyway.

[glossary]
= 术语表

本节定义的术语在本文档中通篇使用，可能全小写或者大写字母开头。

Accessible (Descriptor Binding)  [可访问性]::
    若着色器阶段被包含在绑定描述符的pname:stageFlags中，一个绑定描述符对于该着色器阶段可访问。使用该绑定的描述符只能在能够访问它们的阶段中使用。

Acquire Operation (Resource) [获取操作(资源)]::
    一个操作，其获取图像子资源或者缓冲区区间的所有权。

Adjacent Vertex  [相邻顶点]::
    一个顶点，属于相邻的图元，而非指定的图元本身，顶点可以在几何着色器中访问到。

Aliased Range (Memory)  [异名(内存)]::
    device内存分配的一段区间，其同时被绑定到多个资源。

Allocation Scope [分配作用域]::
    An association of a host memory allocation to a parent object or
    command, where the allocation's lifetime ends before or at the same time
    as the parent object is freed or destroyed, or during the parent
    command.

API Order  API顺序::
    一系列的规则，其掌控绘制命令中的原语如何影响帧缓冲区。

Aspect (Image)  ::
    An image may: contain multiple kinds, or aspects, of data for each
    pixel, where each aspect is used in a particular way by the pipeline and
    may: be stored differently or separately from other aspects.
    For example, the color components of an image format make up the color
    aspect of the image, and may: be used as a framebuffer color attachment.
    Some operations, like depth testing, operate only on specific aspects of
    an image.
    Others operations, like image/buffer copies, only operate on one aspect
    at a time.

Attachment (Render Pass)  附件()::
    A zero-based integer index name used in render pass creation to refer to
    a framebuffer attachment that is accessed by one or more subpasses.
    The index also refers to an attachment description which includes
    information about the properties of the image view that will later be
    attached.

Availability Operation  [可用性操作]::
	一个操作，它导致特定内存写入的内容对于将来的访问变得可利用。    

Available 可用::
    写入到内存的值可以被 state of values written to memory that allows them to be made visible.

Back-Facing::
    See Facingness.

Batch[批量]::
    一个数据结构，作为 <<devsandqueues-submission, 队列提交命令>>的一部分被提交到队列，
	描述了将被执行的队列操作。

Backwards Compatibility [向后兼容]::
    若一个应用程序，依赖于早期的specification定义的功能与有效行为，它可以不经修改而在后续的每一个版本中运行，那么它
	所使用的API版本就是向后兼容的。这假设应用程序不会因检测到不同版本而不运行。

Full Compatibility[全兼容]::
    A given version of the API is fully compatible with another version if
    an application, relying only on valid behavior and functionality defined
    by either of those specifications, is able to correctly run against each
    version without any modification.
    This assumes no active attempt by that application to not run when it
    detects a different version.

Binding (Memory) [绑定(内存)]::
    An association established between a range of a resource object and a
    range of a memory object.
    These associations determine the memory locations affected by operations
    performed on elements of a resource object.
    Memory bindings are established using the flink:vkBindBufferMemory
    command for non-sparse buffer objects, using the flink:vkBindImageMemory
    command for non-sparse image objects, and using the
    flink:vkQueueBindSparse command for sparse resources.

Blend Constant [混合常量]::
	四个浮点数(RGBA)，用来当作混合操作的输入参数。    

Blending [混合]::
    同一个颜色附件中在不同颜色值之间的算术操作，以产生最终的颜色。

Buffer [缓冲区]::
	一个资源，它代表这一个线性数组，保存device内存的内容。
	通过 slink:VkBuffer 类型对象表示。

Buffer View [缓冲区视图]::
    An object that represents a range of a specific buffer, and state that
    controls how the contents are interpreted.
    Represented by a slink:VkBufferView object.

Built-In Variable [内置变量]::
    A variable decorated in a shader, where the decoration makes the
    variable take values provided by the execution environment or values
    that are generated by fixed-function pipeline stages.

Built-In Interface Block [内置接口块]::
    A block defined in a shader that contains only variables decorated with
    built-in decorations, and is used to match against other shader stages.

Clip Coordinates [剪裁坐标]::
    The homogeneous coordinate space that vertex positions (code:Position
    decoration) are written in by vertex processing stages.

Clip Distance [剪裁距离]::
	从顶点处理阶段而来的内置输出变量，它定义了用以剪裁一个图元的半空间。

Clip Volume [剪裁体积]::
	剪裁平面所形成的 半空间的交集。    

Color Attachment [颜色附件]::
	一个subpass 附件，或者一个图像视图，它是片元颜色输出和混合的目标地址。

Color Renderable Format::
    A elink:VkFormat where ename:VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT is
    set in the pname:optimalTilingFeatures or pname:linearTilingFeatures
    field of VkFormatProperties::optimalTilingFeatures returned by
    vkGetPhysicalDeviceFormatProperties, depending on the tiling used.

Combined Image Sampler::
    A descriptor type that includes both a sampled image and a sampler.

Command Buffer [命令缓冲区]::
    An object that records commands to be submitted to a queue.
    Represented by a slink:VkCommandBuffer object.

Command Pool [命令池]::
	一个对象，从这里分配命令缓冲区内存，它拥有这些内存。
	命令池有助于多线程性能，可让不同的线程使用不同的内存分配器，而不需要内部同步。
	通过 slink:VkCommandPool 类型对象表示。

Compatible Allocator [兼容的内存分配器]::
	当内存分配器是兼容的时候，被分配的内存可以经由其他的内存分配器释放掉。    

Compatible Image Formats [兼容的图像格式]::
	当格式兼容时，依一种格式创建的图像，可以拥有在此图像上创建的兼容格式的图像视图。

Compatible Queues [兼容队列]::
	在同一个队列族的队列。
	兼容队列拥有完全相同的属性。    

Component (Format) []::
    A distinct part of a format.
    Depth, stencil, and color channels (e.g. R, G, B, A), are all separate
    components.

Compressed Texel Block []::
    An element of an image having a block-compressed format, comprising a
    rectangular block of texel values that are encoded as a single value in
    memory.
    Compressed texel blocks of a particular block-compressed format have a
    corresponding width, height, and depth that define the dimensions of
    these elements in units of texels, and a size in bytes of the encoding
    in memory.

Cull Distance  剔除距离::
    由顶点处理阶段 A built-in output from vertex processing stages that defines a cull
    half-space where the primitive is rejected if all vertices have a
    negative value for the same cull distance.

Cull Volume  剔除椎体::
    有所有剔除半平面交叉构成的可视空间。

Decoration (SPIR-V)::
	内置变量，流式成员，不变量，插值类型，松弛精度等辅助描述信息，通过修饰符的形式添加到变量或者结构体类型成员的前面。

Depth/Stencil Attachment::
    A subpass attachment point, or image view, that is the target of depth
    and/or stencil test operations and writes.

Depth/Stencil Format::
    A elink:VkFormat that includes depth and/or stencil components.

Depth/Stencil Image (or ImageView)::
    A slink:VkImage (or slink:VkImageView) with a depth/stencil format.

Derivative Group::
    A set of fragment shader invocations that cooperate to compute
    derivatives, including implicit derivatives for sampled image
    operations.

Descriptor 描述符::
    关于一个资源或者资源视图的信息被写入到一个描述符集合，用于在着色器中访问资源或者视图。

Descriptor Binding 描述符绑定::
    An entry in a descriptor set layout corresponding to zero or more
    descriptors of a single descriptor type in a set.
    Defined by a slink:VkDescriptorSetLayoutBinding structure.

Descriptor Pool::
    An object that descriptor sets are allocated from, and that owns the
    storage of those descriptor sets.
    Descriptor pools aid multithreaded performance by enabling different
    threads to use different allocators, without internal synchronization on
    each use.
    Represented by a slink:VkDescriptorPool object.

Descriptor Set []::
    An object that resource descriptors are written into via the API, and
    that can: be bound to a command buffer such that the descriptors
    contained within it can: be accessed from shaders.
    Represented by a slink:VkDescriptorSet object.

Descriptor Set Layout []::
    An object that defines the set of resources (types and counts) and their
    relative arrangement (in the binding namespace) within a descriptor set.
    Used when allocating descriptor sets and when creating pipeline layouts.
    Represented by a slink:VkDescriptorSetLayout object.

Device 设备::
    处理器与执行环境，应用程序通过Vulkan API  让其执行的任务。

Device Memory 设备内存::
    可以被device（设备）访问到的内存。通过 slink:VkDeviceMemory 对象表示。

Device-Level Object  设备级别对象::
    逻辑设备对象和他们的子对象为例，slink:VkDevice， slink:VkQueue，与 slink:VkCommandBuffer 对象是设备级别的对象。

Device-Local Memory 设备端内存::
    连接到设备的内存，设备端访问它，会比访问主机端内存快速很多。

Direct Drawing Commands  直接绘制命令::
    _绘制命令_ that take all their parameters as direct arguments to
    the command (and not sourced via structures in buffer memory as the
    _indirect drawing commands_).
    Includes flink:vkCmdDraw, and flink:vkCmdDrawIndexed.

Dispatchable Handle [可调度handle]::
	一种指针handle类型的handle，可以用于截获Vulkak API命令的vulkan layer。
	每一个Vulkan 命令的第一个参数是 可调度handle。    

Dispatching Commands  [转发命令]::
	唤起计算管线任务的命令。
	包括 flink:vkCmdDispatch 和 flink:vkCmdDispatchIndirect。

Drawing Commands  绘制命令::
    使用图形管线唤起工作的命令。包含 flink:vkCmdDraw， flink:vkCmdDrawIndexed，flink:vkCmdDrawIndirect,
ifdef::VK_AMD_draw_indirect_count[]
    flink:vkCmdDrawIndirectCountAMD, flink:vkCmdDrawIndexedIndirectCountAMD,
endif::VK_AMD_draw_indirect_count[]
    and flink:vkCmdDrawIndexedIndirect.

Duration (Command)::
    The _duration_ of a Vulkan command refers to the interval between
    calling the command and its return to the caller.

Dynamic Storage Buffer::
    A storage buffer whose offset is specified each time the storage buffer
    is bound to a command buffer via a descriptor set.

Dynamic Uniform Buffer []::
    A uniform buffer whose offset is specified each time the uniform buffer
    is bound to a command buffer via a descriptor set.

Dynamically Uniform [动态uniform]::
    See _Dynamically Uniform_ in section 2.2 "`Terms`" of the
    <<spirv-spec,Khronos SPIR-V Specification>>.

Element Size  [元素数量]::
    The size (in bytes) used to store one element of an uncompressed format
    or the size (in bytes) used to store one block of a block-compressed
    format.

Explicitly-Enabled Layer::
    A layer enabled by the application by adding it to the enabled layer
    list in flink:vkCreateInstance or flink:vkCreateDevice.

Event [事件]::
	一个同步原语，它可以在之前的命令完成前通过一个特定的管线阶段集合被激发。
	事件可以在device端等待，可以在主机端被轮询。
	通过 slink:VkEvent 类型对象表示。

Executable State (Command Buffer) [(命令缓冲区的)执行状态]::
	一个命令缓冲区已经完成了命令记录，可以被执行了。
	参看 Initial State and Recording State.

Execution Dependency  [执行依赖]::
    A dependency that guarantees that certain pipeline stages' work for a
    first set of commands has completed execution before certain pipeline
    stages' work for a second set of commands begins execution.
    This is accomplished via pipeline barriers, subpass dependencies,
    events, or implicit ordering operations.

Execution Dependency Chain  [执行依赖链]::
	执行依赖的一个序列，它工作起来，就像时单个执行依赖。    

Extension Scope []::
    The set of objects and commands that can: be affected by an extension.
    Extensions are either device scope or instance scope.

External synchronization []::
    A type of synchronization required: of the application, where parameters
    defined to be externally synchronized must: not be used simultaneously
    in multiple threads.

Facingness (Polygon)  多边形朝向::
	一个简单的分类，要么是 front-facing，要么是 back-facing，取决与顶点的方向（环绕顺序）。    

Fence  [栅栏]::
	一个同步原语，它可以在一个队列上的批量任务或者稀疏绑定操作执行完成后被激发。
    可以在host 端等待栅栏。通过 slink:VkFence 类型对象表示。

Flat Shading [平面着色]::	
    A property of a vertex attribute that causes the value from a single
    vertex (the provoking vertex) to be used for all vertices in a
    primitive, and for interpolation of that attribute to return that single
    value unaltered.

Fragment Input Attachment Interface::
    A fragment shader entry point's variables with code:UniformConstant
    storage class and a decoration of code:InputAttachmentIndex, which
    receive values from input attachments.

Fragment Output Interface [片元输出接口]::
	在片元着色器入口点中，经带有 code:Output 存储类型标志定义的变量，它输出到 颜色 和/或者 深度[遮挡] 附件。

Framebuffer  帧缓冲区::
	一系列的图像视图和一些规模信息，针对每一个render pass，通过绘制命令定义了其输入和输出。
    通过 slink:VkFramebuffer 类型对象表示。

Framebuffer Attachment [帧缓冲区附件]::
	帧缓冲区使用的图像视图中的一种。    

Framebuffer Coordinates  帧缓冲区坐标系::
    A coordinate system in which adjacent pixels' coordinates differ by 1 in
    x and/or y, with [eq]#(0,0)# in the upper left corner and pixel centers
    at half-integers.

Framebuffer-Space [帧缓冲区空间]::
    Operating with respect to framebuffer coordinates.

Framebuffer-Local []::
    A framebuffer-local dependency guarantees that only for a single
    framebuffer region, the first set of operations happens-before the
    second set of operations.

Framebuffer-Global::
    A framebuffer-global dependency guarantees that for all framebuffer
    regions, the first set of operations happens-before the second set of
    operations.

Framebuffer Region::
    A framebuffer region is a set of sample (x, y, layer, sample)
    coordinates that is a subset of the entire framebuffer.

Front-Facing  正面朝向::
    See Facingness.

Global Workgroup []::
    A collection of local workgroups dispatched by a single dispatch
    command.

Handle  ::
	一种不透明整数或者指针值，用于指向一个Vulkan 对象。
	每一个对象类型都有一个唯一的handle类型。    

Happen-after []::
    A transitive, irreflexive and antisymmetric ordering relation between
    operations.
    An execution dependency with a source of *A* and a destination of *B*
    enforces that *B* happens-after *A*.
    The inverse relation of happens-before.

Happen-before 在之前发生::
    A transitive, irreflexive and antisymmetric ordering relation between
    operations.
    An execution dependency with a source of *A* and a destination of *B*
    enforces that *A* happens-before *B*.
    The inverse relation of happens-after.

Helper Invocation::
    A fragment shader invocation that is created solely for the purposes of
    evaluating derivatives for use in non-helper fragment shader
    invocations, and which does not have side effects.

Host [主机端]::
	应用程序所运行的处理器以及执行环境，Vulkan API对其暴露。    

Host Memory [主机内存]::
    不能被设备访问到的内存，用于存储Vulkan实现的数据结构。

Host-Accessible Subresource::
    A buffer, or a linear image subresource in either the
    ename:VK_IMAGE_LAYOUT_PREINITIALIZED or ename:VK_IMAGE_LAYOUT_GENERAL
    layout.
    Host-accessible subresources have a well-defined addressing scheme which
    can be used by the host.

Host-Local Memory  [主机端内存]::
    非设备端内存，设备访问它时，比访问设备端内存快很多。

Host-Visible Memory  [主机端可见内存]::
	设备内存，可以被映射到主机端，可以被主机端读取并写入。    

Identically Defined Objects []::
    Objects of the same type where all arguments to their creation or
    allocation functions, with the exception of pname:pAllocator, are +
    . Vulkan handles which refer to the same object or
    . identical scalar or enumeration values or
    . CPU pointers which point to an array of values or structures which
      also satisfy these three constraints.

Image  图像::
	一个资源，表示设备内存的多维且有格式的解读。
    通过 slink:VkImage 类型对象表示。

Image Subresource  图像子资源::
    A specific mipmap level and layer of an image.

Image Subresource Range []::
	一系列的图像子资源，它们是连续的mipmap 级别 和 层。    

Image View [图像视图]::
	一个对象，代表一个特定图像的一个图像子资源范围，控制内容被解释的状态信息。
	通过 slink:VkImageView 类型对象表示。

Immutable Sampler::
    A sampler descriptor provided at descriptor set layout creation time,
    and that is used for that binding in all descriptor sets allocated from
    the layout, and cannot be changed.

Implicitly-Enabled Layer []::
    A layer enabled by a loader-defined mechanism outside the Vulkan API,
    rather than explicitly by the application during instance or device
    creation.

Index Buffer [索引缓冲区]::
	通过 flink:vkCmdBindIndexBuffer 绑定的缓冲区，是索引值的源，被用于
	flink:vkCmdDrawIndexed 或 flink:vkCmdDrawIndexedIndirect 命令来获取顶点属性。    

Indexed Drawing Commands []::
    _Drawing commands_ which use an _index buffer_ as the source of index
    values used to fetch vertex attributes for a drawing command.
    Includes flink:vkCmdDrawIndexed,
ifdef::VK_AMD_draw_indirect_count[]
    flink:vkCmdDrawIndexedIndirectCountAMD,
endif::VK_AMD_draw_indirect_count[]
    and flink:vkCmdDrawIndexedIndirect.

Indirect Commands []::
    Drawing or dispatching commands that source some of their parameters
    from structures in buffer memory.
    Includes flink:vkCmdDrawIndirect, flink:vkCmdDrawIndexedIndirect,
ifdef::VK_AMD_draw_indirect_count[]
    flink:vkCmdDrawIndirectCountAMD, flink:vkCmdDrawIndexedIndirectCountAMD,
endif::VK_AMD_draw_indirect_count[]
    and flink:vkCmdDispatchIndirect.

ifdef::VK_NVX_device_generated_commands[]
Indirect Commands Layout::
    A definition of a sequence of commands, that are generated on the device
    via flink:vkCmdProcessCommandsNVX.
    Each sequence is comprised of multiple
    elink:VkIndirectCommandsTokenTypeNVX, which represent a subset of
    traditional command buffer commands.
    Represented as slink:VkIndirectCommandsLayoutNVX.
endif::VK_NVX_device_generated_commands[]

Indirect Drawing Commands::
    _Drawing commands_ that source some of their parameters from structures
    in buffer memory.
    Includes flink:vkCmdDrawIndirect,
ifdef::VK_AMD_draw_indirect_count[]
    flink:vkCmdDrawIndirectCountAMD, flink:vkCmdDrawIndexedIndirectCountAMD,
endif::VK_AMD_draw_indirect_count[]
    and flink:vkCmdDrawIndexedIndirect.

Initial State (Command Buffer) [(命令缓冲区的)初始状态]::
	一个命令缓冲区还没有开始记录命令。参看 Recorded State and Executable State.

Input Attachment  [输入附件]::
	一种描述符类型，它代表一个图像视图，且支持 着色器 unfiltered 只读访问 视图中的片元坐标位置。

Instance  [实例]::
	一个顶层Vulkan对象，它代表了应用程序到Vulkan实现的关联关系。
	通过 a slink:VkInstance 类型对象表示。

Instance-Level Object []::
	高层次的Vulkan对象，它不是逻辑设备，或者逻辑设备的子对象。
    例如，slink:VkInstance 和 slink:VkPhysicalDevice 对象是 instance-level 对象。

Internal Synchronization [内部同步]::
    A type of synchronization required: of the implementation, where
    parameters not defined to be externally synchronized may: require
    internal mutexing to avoid multithreaded race conditions.

Invocation (Shader)::
    A single execution of an entry point in a SPIR-V module.
    For example, a single vertex's execution of a vertex shader or a single
    fragment's execution of a fragment shader.

Invocation Group::
    A set of shader invocations that are executed in parallel and that must:
    execute the same control flow path in order for control flow to be
    considered dynamically uniform.

Local Workgroup []::
    A collection of compute shader invocations invoked by a single dispatch
    command, which share shared memory and can synchronize with each other.

Logical Device [逻辑设备]::
    一个对象，它表示应用程序访问物理设备的接口。
	逻辑设备是 绝大多数Vulkan对象的父。通过 slink:VkDevice 类型对象表示。

Logical Operation  [逻辑操作]::
	在颜色附件的片元颜色值与值之间的位操作，产生写入到附件的最终颜色值。    

Lost Device  设备丢失::
	由于硬件错误或者其他意想不到的情况导致的逻辑设备所处于的状态。    

Mappable [可映射的]::
    See Host-Visible Memory.

Memory Dependency  [内存依赖]::
	一个内存依赖是一个执行依赖，它包含可用性与可见性操作，如：    

  * 第一个操作集合在可用性操作之前发生
  * 可用性操作在可见性操作之前发生
  * 可见性操作在第二个操作集合之前发生

Memory Heap [内存堆]::
	一个内存区域，可以从它分配device 内存。    

Memory Type [内存类型]::
	一个索引，用于位设备内存分配选择一些内存属性（例如，可映射、可缓存）。    

Mip Tail Region []::
    The set of mipmap levels of a sparse residency texture that are too
    small to fill a sparse block, and that must: all be bound to memory
    collectively and opaquely.

Non-Dispatchable Handle []::
	一个整数类型handle。handle值 可能不唯一，甚至两个相同类型对象有相同的handle。

Non-Indexed Drawing Commands::
    _Drawing commands_ for which the vertex attributes are sourced in linear
    order from the vertex input attributes for a drawing command (i.e. they
    do not use an _index buffer_).
    Includes flink:vkCmdDraw,
ifdef::VK_AMD_draw_indirect_count[]
    flink:vkCmdDrawIndirectCountAMD,
endif::VK_AMD_draw_indirect_count[]
    and flink:vkCmdDrawIndirect.

Normalized [归一化的]::
	一个值，被除以其他的值，其结果被转换到  [eq]#[0,1]# 的范围内。    

Normalized Device Coordinates  [归一化的设备坐标系]::
    A coordinate space after perspective division is applied to clip
    coordinates, and before the viewport transformation converts to
    framebuffer coordinates.

ifdef::VK_NVX_device_generated_commands[]
Object Table::
    A binding table for various resources (slink:VkPipeline, slink:VkBuffer,
    slink:VkDescriptorSet), so that they can be referenced in
    device-generated command processing.
    Represented as slink:VkObjectTableNVX.
    Entries are registered or unregistered via ftext:uint32_t indices.
endif::VK_NVX_device_generated_commands[]

Overlapped Range (Aliased Range)::
    The aliased range of a device memory allocation that intersects a given
    image subresource of an image or range of a buffer.

Ownership (Resource)::
    If an entity (e.g. a queue family) has ownership of a resource, access
    to that resource is well-defined for access by that entity.

Packed Format [压缩格式]::
	一种格式，它的成分都被当作单个数据元素存储在内存中，且元素内的相对位置固定。    

Physical Device [物理设备]::
	一个对象，它代表这系统中一个设备。通过 slink:VkPhysicalDevice  类型对象表示。

Pipeline [管线]::
    一个对象，它控制了图形或者计算管线工作在设备上如何被执行。
	一个管线包含一个或者多个着色器，同样包含控制了管线中非编程阶段的状态。
	通过 slink:VkPipeline 类型对象表示。

Pipeline Barrier [管线屏障]::
	一个执行或者内存依赖，被当作一个显式的命令记录在一个命令缓冲区内，在之前的命令与后续的命令之间形成了一个依赖。   

Pipeline Cache  [管线缓存]::
	一个对象，它可以被用来从已经被创建的管线中收集和获取信息，且可以利用之前已获取的信息来加速管线创建的过程。
	用一个 slink:VkPipelineCache 类型对象表示。

Pipeline Layout  [管线布局]::
	一个对象，它定义了一些资源（），与利用该该布局创建的管线使用的push constants。
	当创建管线时，绑定描述集合时，和设置push constants值时被使用。
    通过 slink:VkPipelineLayout 类型对象表示。

Pipeline Stage [管线阶段]::
	一个逻辑上独立的执行单元，它执行一个命令定义的一些操作。   

Point Sampling (Rasterization)::
	一条规则，它决定了一个片元采样点是否落在了一个多边形图元之上，通过测试采样坐标是否在多边形在帧缓冲空间的区域内部，
	或者落在了tie-breaking规则之后多边形的边界上。    

ifdef::VK_KHR_swapchain[]
Presentable image::
    A sname:VkImage object obtained from a sname:sname:VkSwapchainKHR used
    to present to a sname:VkSurfaceKHR object.
endif::VK_KHR_swapchain[]

Preserve Attachment []::
    One of a list of attachments in a subpass description that is not read
    or written by the subpass, but that is read or written on earlier and
    later subpasses and whose contents must be preserved through this
    subpass.

Primary Command Buffer [主命令缓冲区]::
	一个命令缓冲区，它可以执行 次级命令缓冲区，且可以被直接提交到队列。    

Primitive Topology  [图元拓扑]::
	控制顶点如何组成一个图元（例如三角形列表，折线段等）的陈述。

Provoking Vertex  [激活顶点]::
	一个图元的顶点，从其获取平面着色属性。
	通常是图元的第一个顶点，且取决于图元拓扑。       

Push Constants []::
	一些值，可以通过vulkan API写入，在着色器中读取。Push constants运行应用程序给着色器设置一些值，
	但是不需要创建缓冲区，或者修改、绑定描述符集合来实现值的更新。    

Push Constant Interface::
    The set of variables with code:PushConstant storage class that are
    statically used by a shader entry point, and which receive values from
    push constant commands.

Query Pool [队列池]::
	一个对象，包含多个查询条目，和它们关联的状态与结果。通过 slink:VkQueryPool 类型对象表示。

Queue  [队列]::
	一个对象，它执行命令缓冲区和一个设备上的稀疏绑定操作。
	通过 slink:VkQueue 类型对象表示。

Queue Family  [队列族]::
	一些队列，它们都有相同的属性，支持同样的操作，通过 slink:VkQueueFamilyProperties 类型表示。

Queue Operation  []::
	在一个设备上由特定的队列执行的一个单元的工作，通过 <<devsandqueues-submission, queue submission command>> 被提交。
	每一个队列提交命令详细描述了特定队列操作，这些操作是调用该命令产生的结果。
	队列操作通常包括由每个命令指定的工作，同步任务。    

Queue Submission [队列提交]::
    Zero or more batches and an optional fence to be signaled, passed to a
    command for execution on a queue.
    See the <<devsandqueues-submission, Devices and Queues chapter>> for
    more information.

Recording State (Command Buffer)::
	一个命令缓冲区已经准备好记录命令。
	参看 Initial State and Executable State.

Release Operation (Resource)  []::
	一个操作，释放图像子资源或者缓冲区范围所有权。   

Render Pass ::
	一个对象，表示一系列的帧缓冲区附件，和使用到这些附件的渲染阶段。通过slink:VkRenderPass 对象表示。

Render Pass Instance []::
    A use of a render pass in a command buffer.

Reset (Command Buffer)  [重置（命令缓冲区）]::
	重置一个命令缓冲区将导致直接丢弃之前记录的命令，并把命令缓冲区置为初始状态。   

Residency Code []::
    An integer value returned by sparse image instructions, indicating
    whether any sparse unbound texels were accessed.

Resolve Attachment  []::
    A subpass attachment point, or image view, that is the target of a
    multisample resolve operation from the corresponding color attachment at
    the end of the subpass.

Sampled Image [已采样图像]::
	一个描述符类型，它代表了一个图像视图，支持着色器内部 filtered（已采样的）和unfiltered 只读访问。

Sampler  [采样结果] ::
	（OpenGL中一些开发者喜欢翻译为 采样器，但是，我不大喜欢这个翻译。https://www.khronos.org/opengl/wiki/Sampler_(GLSL) 中解释过。）
    一个对象，包含了在着色器中控制图像数据如何被采样的状态信息。 同样也是一个类型描述符，描述了对象类型。
	通过 slink:VkSampler 类型表示。

Secondary Command Buffer  [次级命令缓冲区]::
    A command buffer that can: be executed by a primary command buffer, and
    must: not be submitted directly to a queue.

Self-Dependency []::
    A subpass dependency from a subpass to itself, i.e. with
    pname:srcSubpass equal to pname:dstSubpass.
    A self-dependency is not automatically performed during a render pass
    instance, rather a subset of it can: be performed via
    flink:vkCmdPipelineBarrier during the subpass.

Semaphore  [信号量]::
    一种同步原语，支持限号和等待操作，可以用于在队列内或者队列之间的同步操作。
    通过 slink:VkSemaphore 对象表示。

Shader  [着色器]::
	（通过一个入口点）从一个着色器模块中筛选的指令，在着色器阶段中被执行。    

Shader Code [着色器代码]::
    在着色器中用于描述操作的一串指令。

Shader Module [着色器模块]::
    A collection of shader code, potentially including several functions and
    entry points, that is used to create shaders in pipelines.
    Represented by a slink:VkShaderModule object.

Shader Stage  [着色器阶段]::
	执行着色器代码的图形或者计算管线阶段。    

Side Effect  [副作用]::
    A store to memory or atomic operation on memory from a shader
    invocation.

Sparse Block  [稀疏块]::
	一个稀疏资源的元素，可以被独立的绑定到内存。
	特定稀疏资源的稀疏块拥有在绑定内存中对应的字节大小。

Sparse Image Block::
    A sparse block in a sparse partially-resident image.
    In addition to the sparse block size in bytes, sparse image blocks have
    a corresponding width, height, and depth that define the dimensions of
    these elements in units of texels or compressed texel blocks, the latter
    being used in case of sparse images having a block-compressed format.

Sparse Unbound Texel::
    A texel read from a region of a sparse texture that does not have memory
    bound to it.

Static Use []::
    An object in a shader is statically used by a shader entry point if any
    function in the entry point's call tree contains an instruction using
    the object.
    Static use is used to constrain the set of descriptors used by a shader
    entry point.

Storage Buffer []::
    A descriptor type that represents a buffer, and supports reads, writes,
    and atomics in a shader.

Storage Image []::
	一种描述符类型，代表一个图像视图，它支持 unfiltered装载、存储、着色器内原子操作。    

Storage Texel Buffer [存储纹素缓冲区]::
    一种描述符类型，它代表这一个缓冲区视图，支持 unfiltered, formatted 读取、写入和着色器内原子操作。

ifdef::VK_EXT_shader_subgroup_vote[]
Subgroup::
    The set of shader invocations exposed as running concurrently with the
    current shader invocation.
    In compute shaders, the _local workgroup_ is a superset of the subgroup.
endif::VK_EXT_shader_subgroup_vote[]

ifdef::VK_EXT_shader_subgroup_ballot[]
Subgroup Mask::
    A bitmask for all invocations in the current subgroup with one bit per
    invocation, starting with the least significant bit in the first vector
    component, continuing to the last bit (less than code:SubgroupSize) in
    the last required vector component.
endif::VK_EXT_shader_subgroup_ballot[]

Subpass []::
	一个render pass内一个阶段的渲染，它读取、写入一些附件。    

Subpass Dependency []::
    An execution and/or memory dependency between two subpasses described as
    part of render pass creation, and automatically performed between
    subpasses in a render pass instance.
    A subpass dependency limits the overlap of execution of the pair of
    subpasses, and can: provide guarantees of memory coherence between
    accesses in the subpasses.

Subpass Description::
    Lists of attachment indices for input attachments, color attachments,
    depth/stencil attachment, resolve attachments, and preserve attachments
    used by the subpass in a render pass.

Subset (Self-Dependency) []::
    A subset of a self-dependency is a pipeline barrier performed during the
    subpass of the self-dependency, and whose stage masks and access masks
    each contain a subset of the bits set in the identically named mask in
    the self-dependency.

Texel Coordinate System [纹理坐标系统]::
	三种坐标系系统（归一化，未归一化，整数）之一，定义了如何在一张图像或者mipmap层级图像中解读 纹理坐标的值。

Uniform Texel Buffer []::
	一种描述符类型，表示一个缓冲区视图，支持着色器的 unfiltered, formatted 与只读访问。

Uniform Buffer [uniform缓冲区]::
	一种描述符类型，表示一个缓冲区，且支持着色器中的只读访问。

Unnormalized [未归一化的]::
	一个值，依其惯例来解读，并没有被归一化。    

User-Defined Variable Interface [用户定义的变量接口]::
	一个着色器如可变量，带有 code:Input 或 code:Output 存储类型，且不失内置的变量。    

Vertex Input Attribute [顶点输入属性]::
	一个图形管线资源，它未顶点着色器产生输入值，通过从一个顶点输入绑定读入数据，并转换为属性的格式。

Vertex Input Binding [顶点输入绑定]::
	一个被绑定到缓冲区的图形管线资源，包含影响该缓冲区内寻址计算的状态。

Vertex Input Interface [顶点数据接口]::
    顶点着色器入口点变量，带有 code:Input 存储类型，它接受顶点输入属性的值。

Vertex Processing Stages [顶点处理阶段]::
    一系列的着色器阶段，包含：顶点着色器，细分控制着色器，细分求值着色器，几何着色器。

View Volume [可视体积]::
     在齐次坐标系下的一个子空间，对应[-1, 1]之间的投影后的x、y值，在[0, 1]之间的z值。    

Viewport Transformation  [viewport 变换]::
    根据viewport矩形和深度范围，从归一化的设备坐标系转换为缓冲区坐标系。

Visibility Operation [可见性操作]::
    一个操作，它导致一些可用的内容 对特定的内存访问 变得可见。
    An operation that causes available values to become visible to specified
    memory accesses.

Visible  [可见]::
    一种状态：一些内容被写入内存，它们可以被其他的操作可访问。


// To be added per issue 18:
// Current State <<fundamentals-queueoperation>>
// Barycentric Coordinates <<primsrast-polygons-basic>>
// Internal Allocations <<memory-host-allocation-scope>>
// Unavailable, Available <<queries-operation>> - NB: this clashes with available/visible in terms of memory
// Signaled, Unsignaled <<synchronization-semaphores>> <<synchronization-fences>>
// Interior Vertices <<tessellation-tessellator-spacing>>
// Inner Vertices <<tessellation-triangle-tessellation>> <<tessellation-quad-tessellation>>
// Isolines <<tessellation-isoline-tessellation>>
// Binding Range <<sparsemem-memory-binding>>


[glossary]
= Common Abbreviations

Abbreviations and acronyms are sometimes used in the Specification and the
API where they are considered clear and commonplace, and are defined here:

Src::
    Source

Dst::
    Destination

Min::
    Minimum

Max::
    Maximum

Rect::
    Rectangle

Info::
    Information

LOD::
    Level of Detail

ID::
    Identifier

UUID::
    Universally Unique Identifier

Op::
    Operation

R::
    Red color component

G::
    Green color component

B::
    Blue color component

A::
    Alpha color component


[glossary]
= Prefixes

Prefixes are used in the API to denote specific semantic meaning of Vulkan
names, or as a label to avoid name clashes, and are explained here:

VK/Vk/vk::
    Vulkan namespace +
    All types, commands, enumerants and defines in this specification are
    prefixed with these two characters.

PFN/pfn::
    Function Pointer +
    Denotes that a type is a function pointer, or that a variable is of a
    pointer type.

p::
    Pointer +
    Variable is a pointer.

vkCmd::
    Commands that record commands in command buffers +
    These API commands do not result in immediate processing on the device.
    Instead, they record the requested action in a command buffer for
    execution when the command buffer is submitted to a queue.

s::
    Structure +
    Used to denote the etext:VK_STRUCTURE_TYPE* member of each structure in
    pname:sType
